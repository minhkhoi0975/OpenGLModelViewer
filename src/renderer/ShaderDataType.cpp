#include "ShaderDataType.h"

const char* GetDataTypeName(GLenum dataType)
{
	#define GET_DATA_TYPE_NAME(p) case (p): return #p;
	switch (dataType)
	{
		GET_DATA_TYPE_NAME(GL_FLOAT);
		GET_DATA_TYPE_NAME(GL_FLOAT_VEC2);
		GET_DATA_TYPE_NAME(GL_FLOAT_VEC3);
		GET_DATA_TYPE_NAME(GL_FLOAT_VEC4);
		GET_DATA_TYPE_NAME(GL_FLOAT_MAT2);
		GET_DATA_TYPE_NAME(GL_FLOAT_MAT3);
		GET_DATA_TYPE_NAME(GL_FLOAT_MAT4);
		GET_DATA_TYPE_NAME(GL_FLOAT_MAT2x3);
		GET_DATA_TYPE_NAME(GL_FLOAT_MAT2x4);
		GET_DATA_TYPE_NAME(GL_FLOAT_MAT3x2);
		GET_DATA_TYPE_NAME(GL_FLOAT_MAT3x4);
		GET_DATA_TYPE_NAME(GL_FLOAT_MAT4x2);
		GET_DATA_TYPE_NAME(GL_FLOAT_MAT4x3);

		GET_DATA_TYPE_NAME(GL_DOUBLE);
		GET_DATA_TYPE_NAME(GL_DOUBLE_VEC2);
		GET_DATA_TYPE_NAME(GL_DOUBLE_VEC3);
		GET_DATA_TYPE_NAME(GL_DOUBLE_VEC4);
		GET_DATA_TYPE_NAME(GL_DOUBLE_MAT2);
		GET_DATA_TYPE_NAME(GL_DOUBLE_MAT3);
		GET_DATA_TYPE_NAME(GL_DOUBLE_MAT4);
		GET_DATA_TYPE_NAME(GL_DOUBLE_MAT2x3);
		GET_DATA_TYPE_NAME(GL_DOUBLE_MAT2x4);
		GET_DATA_TYPE_NAME(GL_DOUBLE_MAT3x2);
		GET_DATA_TYPE_NAME(GL_DOUBLE_MAT3x4);
		GET_DATA_TYPE_NAME(GL_DOUBLE_MAT4x2);
		GET_DATA_TYPE_NAME(GL_DOUBLE_MAT4x3);

		GET_DATA_TYPE_NAME(GL_INT);
		GET_DATA_TYPE_NAME(GL_INT_VEC2);
		GET_DATA_TYPE_NAME(GL_INT_VEC3);
		GET_DATA_TYPE_NAME(GL_INT_VEC4);

		GET_DATA_TYPE_NAME(GL_UNSIGNED_INT);
		GET_DATA_TYPE_NAME(GL_UNSIGNED_INT_VEC2);
		GET_DATA_TYPE_NAME(GL_UNSIGNED_INT_VEC3);
		GET_DATA_TYPE_NAME(GL_UNSIGNED_INT_VEC4);

		GET_DATA_TYPE_NAME(GL_BOOL);
		GET_DATA_TYPE_NAME(GL_BOOL_VEC2);
		GET_DATA_TYPE_NAME(GL_BOOL_VEC3);
		GET_DATA_TYPE_NAME(GL_BOOL_VEC4);

		GET_DATA_TYPE_NAME(GL_SAMPLER_1D);
		GET_DATA_TYPE_NAME(GL_SAMPLER_2D);
		GET_DATA_TYPE_NAME(GL_SAMPLER_3D);
		GET_DATA_TYPE_NAME(GL_SAMPLER_CUBE);

		default:
			return "INVALID";
	}
	#undef GET_DATA_TYPE_NAME
}
